signature Algebra(alphabet, comp, compKnot) {
  comp starts(comp);
  comp p1(comp);
  comp p2(comp);
  comp p4(comp);
  comp p5(comp);
  comp p6(comp);
  comp p8(comp);
  comp p9(comp);
  comp midsl(comp);
  comp midcl(comp);
  comp p5M(comp);
  comp p5MM(comp);
  comp pkadds(compKnot,comp,Subsequence);
  comp variant2(Subsequence, compKnot, Subsequence);
  comp sadd(Subsequence, comp);
  comp variant1(Subsequence, comp);
  comp adds(comp,Subsequence);
  comp cadd(comp, comp);
  comp ccadd(comp, comp, comp);
  comp cccadd(comp, comp, comp, comp);
  comp is(Subsequence, comp, Subsequence);
  comp edl(Subsequence, comp, Subsequence);
  comp edr(Subsequence, comp, Subsequence);
  comp edlr(Subsequence, comp, Subsequence);
  comp pk(compKnot);
  compKnot pknot(Subsequence, comp, Subsequence, comp, Subsequence, comp, Subsequence ; int, string_t, string_t, string_t, string_t, string_t, string_t);
  comp sr(Subsequence, comp, Subsequence);
  comp hl(Subsequence, Subsequence, Subsequence, Subsequence, Subsequence);
  comp bl(Subsequence, Subsequence, Subsequence, comp, Subsequence, Subsequence);
  comp br(Subsequence, Subsequence, comp, Subsequence, Subsequence, Subsequence);
  comp il(Subsequence, Subsequence, Subsequence, comp, Subsequence, Subsequence, Subsequence);
  comp ilseqcon(Subsequence, Subsequence, Subsequence, comp, Subsequence, Subsequence, Subsequence);
  comp noseqcon(comp);
  comp addss(comp, Subsequence);
  comp ml(Subsequence, Subsequence, comp, Subsequence, Subsequence);
  comp mldl(Subsequence, Subsequence, Subsequence, comp, Subsequence, Subsequence);
  comp mldr(Subsequence, Subsequence, comp, Subsequence, Subsequence, Subsequence);
  comp mldlr(Subsequence, Subsequence, Subsequence, comp, Subsequence, Subsequence, Subsequence);
  comp mlstem(comp);
  comp pkml(comp);
  comp frd(comp, Subsequence; int);
  comp ul(comp);
  comp emptymid(Subsequence ; int, int);
  comp midbase(Subsequence ; int, int);
  comp middlro(Subsequence ; int, int);
  comp midregion(comp);
  comp middl(Subsequence, comp; int);
  comp middr(comp, Subsequence; int);
  comp middlr(Subsequence, comp, Subsequence; int, int);
  comp bkd(Subsequence, comp; int);
  comp pss(Subsequence);
  comp kndl(Subsequence, compKnot);
  comp kndr(compKnot, Subsequence);
  comp kndlr(Subsequence, compKnot, Subsequence);
  choice [comp] h([comp]);
  choice [compKnot] hKnot([compKnot]);
}
